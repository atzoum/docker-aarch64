#!groovy

node {
    def imageName = 'aarch64-gitea'
    def tagName = env.GITEA_TAG  ?: 'latest'
    def branchName = env.GITEA_TAG  ? "v${GITEA_TAG}" : "master"
    stage('checkout') {
        git url: 'https://github.com/atzoum/docker-aarch64.git'
    }
    
    withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'dockerhub', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS']]) {
        withEnv(["PATH+DOCKER=/var/jenkins_home/docker-1.12.5","PATH+GIT=${ tool 'git'}","DOCKER_HOST=tcp://${DOCKER_HOSTNAME}:2375"]) {
            
            stage('build') {
                
                echo "building binary"
                sh """
                     git clean -df
                     docker build -t ${DOCKER_USER}/aarch64-gitea-builder -f ${imageName}/Dockerfile.build ${imageName}/
                     docker run -i --rm -v ${workspaceDir}/${imageName}/:/binary atzoum/aarch64-gitea-builder ${branchName}
                """
                dir(imageName) {
                    stash name: "giteastash", includes: "README.md,Dockerfile"
                    git(url: 'https://github.com/go-gitea/gitea.git', branch: 'master')
                    if (env.GITEA_TAG) {
                        sh "git checkout ${branchName}"
                    }
                    unstash "giteastash"
                }
                sh "docker build -t ${DOCKER_USER}/${imageName}:${tagName} ${imageName}/"
            }

            stage('push') {
                
                echo "pushing ${imageName}"
                sh """
                     docker login -u="$DOCKER_USER" -p="$DOCKER_PASS" && \
                     docker push ${DOCKER_USER}/${imageName}:tagName
                """
            }

            stage('update description') {
                
                def fullDescription = readFile "${imageName}/README.md"
                def token = readJson(
                    sh(
                        returnStdout: true, 
                        script: "curl -s -H \"Content-Type: application/json\" -X POST -d '{\"username\": \"${DOCKER_USER}\", \"password\": \"${DOCKER_PASS}\"}\' https://hub.docker.com/v2/users/login/")
                    ).token

                httpRequest(
                    url: "https://hub.docker.com/v2/repositories/atzoum/${imageName}/", 
                    httpMode: 'PATCH', 
                    requestBody: writeJson([full_description: fullDescription]), 
                    customHeaders: [[name: 'Content-Type', value: 'application/json'], [name: 'Authorization', value: "JWT ${token}"]], 
                    validResponseCodes: '200', 
                    consoleLogResponseBody: true)
            }
        }
    }
}

@NonCPS
def readJson(String input) {
  final slurper = new groovy.json.JsonSlurper()
  return new HashMap<>(slurper.parseText(input))
}

@NonCPS
def writeJson(v) {
  groovy.json.JsonOutput.toJson(v)
}
